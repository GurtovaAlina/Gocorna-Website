/*--------- Адаптивный шрифт и свойства -----------*/
/* @import "_adaptiv"; */

// ширина макета
$maxWidth: 1152;
// ширина ограничивающего контейнера (.wrapper)
$maxWidthContainer: 1032;


//     adaptiv-value("свойство css", начальное макетное значение, минимальное значение, режим);
@mixin adaptiv-value($property, $startSize, $minSise, $type) { 
    $addSize: $startSize - $minSise;
    @if $type==1 {
        //только если меньше контейнера
        #{$property}: $startSize + px;
        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSise + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
        }
    } @else if $type==2 {
        //только если больше контейнера
        #{$property}: $startSize + px;
        @media (min-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSise + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        }
    } @else {
        //всегда (0)
        #{$property}: calc(#{$minSise + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}

/*
Пример (можно для padding-left, margin-bottom, font-size):
.block__body { 
    @include adaptiv-value("padding", 50, 20, 0);
}
*/


/*--------------------*/

// брейкпоинты
$mv1152: 1152px;
$mv767: 767px;
$mv320: 320px;

@mixin respond-to($media) {
  @if $media == 1152 {
    @media only screen and (max-width: $mv1152) { @content; }
  }
  @else if $media == 767 {
    @media only screen and (max-width: $mv767) { @content; }
  }
  @else if $media == 320 {
    @media only screen and (max-width: $mv320) { @content; }
  }
}


/*
Пример
body.lock {
    @include respond-to(767) {
        overflow: hidden;
    }
}
*/